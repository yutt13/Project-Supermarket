generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Product {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  category_id String?   @db.ObjectId
  name        String
  price       Float
  description String?
  stock       Int
  picture     String?
  Category    Category? @relation(fields: [category_id], references: [id], name: "CategoryToProduct")
  OrderItems  OrderItem[]
  CartItems   CartItem[] // เพิ่มความสัมพันธ์กลับไปยัง CartItem
}

model Category {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  products Product[] @relation("CategoryToProduct")
}

model Order {
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  customerId String     @db.ObjectId
  customer   Customer   @relation(fields: [customerId], references: [id], name: "CustomerToOrder")
  cartId     String?    @db.ObjectId
  cart       Cart?      @relation(fields: [cartId], references: [id], name: "CartToOrder")
  OrderItems OrderItem[]
  createdAt  DateTime   @default(now())
  status     String     @default("Pending")
}

model OrderItem {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  orderId   String  @db.ObjectId
  productId String  @db.ObjectId
  quantity  Int
  Order     Order   @relation(fields: [orderId], references: [id])
  Product   Product @relation(fields: [productId], references: [id])
}

model Customer {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String    @unique
  password  String
  role      String    @default("USER")
  orders    Order[]   @relation("CustomerToOrder")
  cart      Cart?     // เพิ่มความสัมพันธ์กลับไปยัง Cart
}

model Cart {
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  customerId String     @db.ObjectId @unique
  customer   Customer   @relation(fields: [customerId], references: [id])
  items      CartItem[]
  orders     Order[]    @relation("CartToOrder") // เพิ่มความสัมพันธ์กับ Order
}

model CartItem {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  cartId    String  @db.ObjectId
  productId String  @db.ObjectId
  quantity  Int
  cart      Cart    @relation(fields: [cartId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}